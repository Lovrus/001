package Java_H_Schildt.chapter_1_14;

// Продемонстрировать базовый тип
public class Gen2<T> {

    T ob; // объявить объект типа Т

    // передать конструктору ссылку на объект типа Т
    Gen2(T o) {
        ob = o;
    }

    // возвратить объект ob
    T getOb() {
        return ob;
    }
}

// Продемонстрировать применение базового типа
class RawDemo {
    public static void main(String[] args) {

        // создать объект типа Gen для целых чисел
        Gen2<Integer> iOb = new Gen2<Integer>(88);

        // создать объект типа Gen для символьных строк
        Gen2<String> strOb = new Gen2<String>("Тест сообщений");

        // создать объект базового типа Gen и присвоить ему
        // значение типа Double
        Gen2 raw = new Gen2(Double.valueOf(98.6));

        // Требуется приведение типов, поскольку тип неизвестен
        double d = (Double) raw.getOb();
        System.out.println("Значение:" + d);

        // Применение базовых типов может вызвать исключения
        // во время выполения. Ниже представлены некоторые
        // тому примеры. Следующее приведение типов вызовет
        // ошибку во время выполнения!
        // int i = (Integer) raw.getOb();
        // ОШИБКА во время выполения!
        // следующее присваивание нарушает типовую безопасность
        strOb = raw;// Верно, но потенциально ошибочно
        // String str = strOb.getob();
        // ОШИБКА во время выполнения!
        // Следующее присваивание также нарушает
        // типовую безопасность
        raw = iOb; // Верно, но потенциально ошибочно
        // d = (Double) raw.detob();
        // ОШИБКА во время выполнения!
    }
}
